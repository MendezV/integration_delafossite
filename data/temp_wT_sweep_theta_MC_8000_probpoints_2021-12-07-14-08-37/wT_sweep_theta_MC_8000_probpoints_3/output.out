reading lattice from... ./Lattices/sqKgridX8000.npy
reading lattice from... ./Lattices/sqKgridY8000.npy
starting sampling in reciprocal space....
 finished sampling in reciprocal space.... 0.07155323028564453
started calculating filling for chemical potential and dispersion parameters TB_single_band..
reading lattice from... ./Lattices/KgridX400.npy
reading lattice from... ./Lattices/KgridY400.npy
reading lattice from... ./Lattices/KgridX400.npy
reading lattice from... ./Lattices/KgridY400.npy
finished calculating filling for chemical potential
Filling: 0.5021914101708863 .... chemical potential: 29.41164495334965
The fermi energy in mev is: 3064.1164088176356, and in units of J: 296.3362097502549, the bandwidth is:494.39071566731144
reading lattice from... ./Lattices/KgridX8000.npy
reading lattice from... ./Lattices/KgridY8000.npy
reading lattice from... ./Lattices/sqKgridX8000.npy
reading lattice from... ./Lattices/sqKgridY8000.npy
energy at the point.. 2.616965833149795 -0.012168622338113444  is  4.813565695371835e-06
the angle is  -0.0046498637787463866
150 the fermi surface points 7 chunk numtheads
starting with calculation of Sigma
178.32895827293396  seconds  2.616965833149795 -0.012168622338113444 0.0
174.93145513534546  seconds  2.616965833149795 -0.012168622338113444 0.7000000000000001
196.03566670417786  seconds  2.616965833149795 -0.012168622338113444 1.4000000000000001
199.17106890678406  seconds  2.616965833149795 -0.012168622338113444 2.1
219.84481239318848  seconds  2.616965833149795 -0.012168622338113444 2.8000000000000003
199.36752343177795  seconds  2.616965833149795 -0.012168622338113444 4.2
240.29630851745605  seconds  2.616965833149795 -0.012168622338113444 3.5
270.6228606700897  seconds  2.616965833149795 -0.012168622338113444 4.9
274.17894077301025  seconds  2.616965833149795 -0.012168622338113444 5.6000000000000005
280.7155351638794  seconds  2.616965833149795 -0.012168622338113444 6.300000000000001
Traceback (most recent call last):
  File "omegaTscalingFS.py", line 1480, in <module>
    sys.exit(main())  # next section explains the use of sys.exit
  File "omegaTscalingFS.py", line 1469, in main
    [shifts, w, delsd]=SE.parInt_w( theta, w, Machine, sq)
  File "omegaTscalingFS.py", line 1071, in parInt_w
    for result in results:
  File "/home/jfm343/anaconda3/lib/python3.8/concurrent/futures/process.py", line 484, in _chain_from_iterable_of_lists
    for element in iterable:
  File "/home/jfm343/anaconda3/lib/python3.8/concurrent/futures/_base.py", line 611, in result_iterator
    yield fs.pop().result()
  File "/home/jfm343/anaconda3/lib/python3.8/concurrent/futures/_base.py", line 439, in result
    return self.__get_result()
  File "/home/jfm343/anaconda3/lib/python3.8/concurrent/futures/_base.py", line 388, in __get_result
    raise self._exception
concurrent.futures.process.BrokenProcessPool: A process in the process pool was terminated abruptly while the future was running or pending.
Command exited with non-zero status 1
3331.75user 1604.52system 7:43.19elapsed 1065%CPU (0avgtext+0avgdata 38258064maxresident)k
25100016inputs+125384outputs (398590major+148123412minor)pagefaults 0swaps
